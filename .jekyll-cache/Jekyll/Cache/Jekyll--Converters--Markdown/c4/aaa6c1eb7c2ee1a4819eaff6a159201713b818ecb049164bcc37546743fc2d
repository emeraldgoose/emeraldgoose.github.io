I"T<h2 id="카라츠바-알고리즘-이해">카라츠바 알고리즘 이해</h2>

<hr />

<p>카라츠바 알고리즘 (Karatsuba algorithm)은 큰 수에 대한 효과적인 알고리즘이다. 이 방법은 두 $n$자리 수 곱셈을 $3n^{log_2{3}}=3n^{1.585}$개의 한 자리 곱셈으로 줄일 수 있다.</p>

<p>또한, 카라츠바 알고리즘은 분할 정복 (Divide and Conquer)에 기반하고 있다.</p>

<p>카라츠바 알고리즘은 두 큰 수 $x$, $y$의 절반인 수들의 곱 3번과 시프트 연산을 이용하는 것이다.</p>

<p>왜냐하면, 곱셈의 경우 $O(n^2)$의 시간 복잡도를 가지고 있고 덧셈, 뺄셈의 경우 $O(n)$의 시간 복잡도를 가지고 있다. 카라츠바 알고리즘을 이용하여 곱셈의 횟수를 줄이고 덧셈, 뺄셈의 횟수를 늘리는 알고리즘이다.</p>

<p>$x$와 $y$를 $B$진법의 $n$자리 수라고 하자. $n$보다 작은 양수 $m$에 대해 $x$, $y$를 다음과 같이 쪼갤 수 있다.</p>

<ul>
  <li>$x=x_1B^m+x_0 \space(x_0&lt;B^m)$</li>
  <li>$y=y_1B^m+y_0 \space(y_0&lt;B^m)$</li>
</ul>

<p>위의 식을 다음과 같이 다시 정의한다.</p>

<ul>
  <li>$z_2=x_1y_1$</li>
  <li>$z_1=x_1y_0+x_0y_1$</li>
  <li>$z_0=x_0y_0$</li>
</ul>

<p>이제, x와 y의 곱은 다음과 같이 정리할 수 있다.</p>

<ul>
  <li>$xy=(x_1B^m+x_0)(y_1B^m+y_0)=z_2B^{2m}+z_1B^m+z_0$</li>
</ul>

<p>한편, $z_1$에 대해 $z_2$와 $z_0$를 이용하여 다음과 같이 정리할 수 있다.</p>

<ul>
  <li>$\begin{matrix} z_1 &amp;=&amp; (x_1y_1+x_1y_0+x_0y_1+x_0y_0)-x_1y_1-x_0y_0=x_1y_0+x_0y_1 \ &amp;=&amp;(x_1+x_0)(y_1+y_0)-z_2-z_0 \end{matrix}$</li>
</ul>

<h2 id="카라츠바-알고리즘-구현">카라츠바 알고리즘 구현</h2>

<hr />

<p>두 큰 수 $x$, $y$는 벡터를 이용할 것이다.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">nomalize</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">num</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">num</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">size</span><span class="o">=</span><span class="n">num</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
	
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">size</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 자릿수 올림 계산</span>
        <span class="k">if</span><span class="p">(</span><span class="n">num</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
            <span class="kt">int</span> <span class="n">carry</span><span class="o">=</span><span class="p">(</span><span class="n">abs</span><span class="p">(</span><span class="n">num</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="o">+</span><span class="mi">9</span><span class="p">)</span><span class="o">/</span><span class="mi">10</span><span class="p">;</span>
            <span class="n">num</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">-=</span><span class="n">carry</span><span class="p">;</span>
            <span class="n">num</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+=</span><span class="n">carry</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="p">{</span>
            <span class="n">num</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">+=</span><span class="n">num</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">/</span><span class="mi">10</span><span class="p">;</span>
            <span class="n">num</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">%=</span><span class="mi">10</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">while</span><span class="p">(</span><span class="n">num</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">&gt;</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">num</span><span class="p">.</span><span class="n">back</span><span class="p">()</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="c1">// 앞에 남은 0을 제거한다</span>
        <span class="n">num</span><span class="p">.</span><span class="n">pop_back</span><span class="p">();</span>
<span class="p">}</span>

<span class="c1">// multiply</span>
<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">multiply</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">c</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">+</span><span class="n">b</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
	
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">a</span><span class="p">.</span><span class="n">size</span><span class="p">();</span><span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">b</span><span class="p">.</span><span class="n">size</span><span class="p">();</span><span class="n">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">c</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="n">j</span><span class="p">]</span><span class="o">+=</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">*</span><span class="n">b</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
        <span class="p">}</span>
    <span class="p">}</span>
	
    <span class="n">normalize</span><span class="p">(</span><span class="n">c</span><span class="p">);</span>
    <span class="k">return</span> <span class="n">c</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// a+=b*10^k</span>
<span class="kt">void</span> <span class="nf">add</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">,</span> <span class="kt">int</span> <span class="n">k</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">ASize</span><span class="o">=</span><span class="n">a</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="c1">// 원래 a 길이</span>
    <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">&lt;</span><span class="n">b</span><span class="p">.</span><span class="n">size</span><span class="p">())</span> <span class="p">{</span>
        <span class="n">a</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="n">b</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">+</span><span class="n">k</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="n">a</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>

    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">ASize</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">a</span><span class="p">.</span><span class="n">size</span><span class="p">();</span><span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">b</span><span class="p">.</span><span class="n">size</span><span class="p">();</span><span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="n">k</span><span class="p">]</span><span class="o">+=</span><span class="n">b</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
    <span class="n">normalize</span><span class="p">(</span><span class="n">a</span><span class="p">);</span>	
<span class="p">}</span>

<span class="c1">// a-=b (a&gt;=b)</span>
<span class="kt">void</span> <span class="nf">sub</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">b</span><span class="p">.</span><span class="n">size</span><span class="p">();</span><span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-=</span><span class="n">b</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
    <span class="n">normalize</span><span class="p">(</span><span class="n">a</span><span class="p">);</span>
<span class="p">}</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">karatsuba</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// a.size()&lt;b.size() -&gt; swap(a,b)</span>
    <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">&lt;</span><span class="n">b</span><span class="p">.</span><span class="n">size</span><span class="p">())</span> <span class="k">return</span> <span class="n">karatsuba</span><span class="p">(</span><span class="n">b</span><span class="p">,</span><span class="n">a</span><span class="p">);</span>
	
    <span class="c1">// 기저사례1 : a나 b가 비어있는 경우</span>
    <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">==</span><span class="mi">0</span> <span class="o">||</span> <span class="n">b</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">();</span>

    <span class="c1">// 기저사례2 : a가 비교적 짧은 경우, O(n^2)곱셈으로 변경한다(성능을 위함)</span>
    <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">&lt;=</span><span class="mi">50</span><span class="p">)</span> <span class="k">return</span> <span class="n">multiply</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">);</span>
	
    <span class="c1">// a와 b를 a0, a1, b0, b1으로 분리</span>
    <span class="kt">int</span> <span class="n">half</span><span class="o">=</span><span class="n">a</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">a0</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">a</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">half</span><span class="p">);</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">a1</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">half</span><span class="p">,</span><span class="n">a</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">b0</span><span class="p">(</span><span class="n">b</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">b</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">min</span><span class="p">(</span><span class="n">b</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span><span class="n">half</span><span class="p">));</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">b1</span><span class="p">(</span><span class="n">b</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">min</span><span class="p">(</span><span class="n">b</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span><span class="n">half</span><span class="p">),</span><span class="n">b</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>

    <span class="c1">// z2=a1*b1</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">z2</span><span class="o">=</span><span class="n">karatsuba</span><span class="p">(</span><span class="n">a1</span><span class="p">,</span><span class="n">b1</span><span class="p">);</span>

    <span class="c1">// z0=a0*b0</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">z0</span><span class="o">=</span><span class="n">karatsuba</span><span class="p">(</span><span class="n">a0</span><span class="p">,</span><span class="n">b0</span><span class="p">);</span>

    <span class="c1">// z1=(a0+a1)(b0+b1)-z2-z0</span>
    <span class="n">add</span><span class="p">(</span><span class="n">a0</span><span class="p">,</span><span class="n">a1</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
    <span class="n">add</span><span class="p">(</span><span class="n">b0</span><span class="p">,</span><span class="n">b1</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">z1</span><span class="o">=</span><span class="n">karatsuba</span><span class="p">(</span><span class="n">a0</span><span class="p">,</span><span class="n">b0</span><span class="p">);</span>
    <span class="n">sub</span><span class="p">(</span><span class="n">z1</span><span class="p">,</span><span class="n">z0</span><span class="p">);</span>
    <span class="n">sub</span><span class="p">(</span><span class="n">z1</span><span class="p">,</span><span class="n">z2</span><span class="p">);</span>

    <span class="c1">// 병합 과정</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">ret</span><span class="p">(</span><span class="n">z2</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="o">+</span><span class="n">half</span><span class="o">*</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
    <span class="n">add</span><span class="p">(</span><span class="n">ret</span><span class="p">,</span><span class="n">z0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
    <span class="n">add</span><span class="p">(</span><span class="n">ret</span><span class="p">,</span><span class="n">z1</span><span class="p">,</span><span class="n">half</span><span class="p">);</span>
    <span class="n">add</span><span class="p">(</span><span class="n">ret</span><span class="p">,</span><span class="n">z2</span><span class="p">,</span><span class="n">half</span><span class="o">*</span><span class="mi">2</span><span class="p">);</span>

    <span class="k">return</span> <span class="n">ret</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="카라츠바-알고리즘의-성능">카라츠바 알고리즘의 성능</h2>

<hr />

<p>$a$, $b$의 자릿수 $n$이 $2^k$ 라고 할 때, 재귀 호출의 깊이는 $k$가 된다. 한 번 쪼갤 때 마다 수행해야 할 곱셈의 연산이 3배씩 증가하므로 마지막 단계에서 $3^k$번의 연산이 필요하다. 그러나 마지막 단계는 한 자리수 곱셈이므로 곱셈 한 번이면 충분하다.</p>

<p>따라서 곱셈 횟수는 $O(3^k)$의 시간 복잡도를 가지고 있는데 $n=2^k$이므로 $k=logn$이다.</p>

<p>그래서 $O(3^k)=O(3^{logn})=O(n^{log3})$의 시간 복잡도를 가지게 된다. $(a^{logb}=b^{loga})$</p>

<p>반면, 병합과정에 있어 덧셈과 뺄셈 과정만 하므로 O(n)의 시간 복잡도를 가지는데 재귀 호출의 깊이가 증가할 때마다 수의 길이는 절반이 되고 연산의 횟수는 3배가 되므로 깊이 k에서 연산 횟수는 $(\frac{3}{2})^kn$가 된다.</p>

<p>총 연산 수는 $n\sum_{i=0}^{log(n)}(\frac{3}{2})^i$인데 $n^{log(3)}$과 같이 따라가므로 최종 시간 복잡도는 $O(n^{log3})$이 된다.</p>

<h2 id="reference">Reference</h2>

<p><a href="https://invincibletyphoon.tistory.com/13">카라츠바의 빠른 곱셈 (Karatsuba algorithm)</a></p>
:ET